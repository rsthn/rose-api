
(shield:validate
    (shield:field token
        required true
        pattern identifier
        check:invalid-token (eq? (config.Database.token) ($))
    )
)

;; Load environment configuration file.
(when-not (path:exists "conf/(config.env).conf")
    (throw "Configuration file `(config.env).conf` does not exist"))

(set conf (config:parse (file:read "conf/(config.env).conf")))
(when-not (conf.Database) (set conf.Database (&)))

;; Load list of patches with prefix "db-".
(set patches (array:sort 
    (map (filter (dir:files "conf/database") (and (ends-with? ".sql" (i.name)) (starts-with? "db-" (i.name))))
        (& name (i.name) path (i.path) version (substr 3 (array:first (split "_" (i.name)))) ))
    (str:compare (a.version) (b.version))
))

(&
    databaseTime (db:scalar `SELECT NOW()`)
    serverTime (datetime:now)
    currentVersion (or (conf.Database.version) "N/A")
    latestVersion ((array:last (patches)).version)
)
