
;;
;; Removes a photo from a record in the database and sets its value to NULL.
;;
;; @param {String} fieldId
;; @param {String} id
;; @param {String} targetTable
;; @param {String} fieldPhoto
;;
(def-fn utils:remove-photo fieldId id targetTable fieldPhoto

    (set old_photo (db:scalar `SELECT {fieldPhoto} FROM {targetTable} WHERE {fieldId} = ?` (id)))
    (if (not-null? (old_photo))
        (file:remove (old_photo)))

    (db:exec `UPDATE {targetTable} SET {fieldPhoto} = NULL WHERE {fieldId} = ?` (id))
)

;;
;; Updates the photo path in a record in the database and removes the old photo if exists. The image will
;; be resized to the specified width and height (smartcut). Or if only one or the other of width and
;; height is specified, the image will be resized to fit the specified width or height, respectively.
;;
;; @param {File} formFile
;; @param {String} fieldId
;; @param {String} id
;; @param {String} targetTable
;; @param {String} fieldPhoto
;; @param {Number} width
;; @param {Number} [height]
;;
(def-fn utils:update-photo formFile fieldId id targetTable fieldPhoto width height=0

    (when (null? (formFile)) (ret))

    (set new_photo (image:load (formFile.path)))
    (set old_photo (db:scalar `SELECT {fieldPhoto} FROM {targetTable} WHERE {fieldId} = ?` (id)))
    (if (not-null? (old_photo))
        (file:remove (old_photo)))

    (set target "storage/(str:replace '#' '' (targetTable))/(id)_(math:rand).png")

    (set new_photo (? (and (width) (height))
        (image:smartcut (new_photo) (width) (height) "CENTER" "CENTER" true)
        (image:fit (new_photo) (width) (height) true)
    ))

    (file:write (target) (image:data (new_photo) "png"))
    (db:exec `UPDATE {targetTable} SET {fieldPhoto} = ? WHERE {fieldId} = ?` (target) (id))
)

;;
;; Returns the URL of the picture. If the picture does not exist, returns the URL of the default image.
;;
;; @param {String} photoPath
;; @param {String} [defaultPath]
;; @returns {String}
;;
(def-fn utils:photo-url photoPath defaultPath="def-storage/blank.png"
    (concat (gateway.ep) "/" (?? (photoPath) (defaultPath)))
)
