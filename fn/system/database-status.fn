
(shield:method-required "GET")

(shield:validate-data input (gateway.request) (object
    token (rules
        required true
        min-length 8
        max-length 256
        pattern identifier
        check:@invalid_token (eq? (config.system.token) ($))
    )
))

;; Load environment configuration file.
(when-not (path:exists "conf/db-version.conf")
    (file:write "conf/db-version.conf" ""))

(set conf (config:parse (file:read "conf/db-version.conf")))
(when-not (conf.database) (set conf.database (&)))

;; Load list of patches with prefix "db-".
(set patches (array:sort 
    (map (filter (dir:files "conf/database") (and (ends-with? ".sql" (i.name)) (starts-with? "db-" (i.name))))
        (& name (i.name) path (i.path) version (array:at 1 (split "-" (i.name))) ))
    (str:compare (a.version) (b.version))
))

(set db_time (locale:iso-datetime (datetime:parse (db:scalar `SELECT NOW()`))))
(set srv_time (locale:iso-datetime (datetime:now)))

(&
    databaseTime (db_time)
    serverTime (srv_time)
    timezone (ne? (db_time) (srv_time) "ðŸš¨ Database and server timezones do not match" (config.Locale.timezone))
    currentVersion (or (conf.database.version) "None")
    latestVersion ((array:last (patches)).version)
)
