
(shield:method-required "GET")

(shield:validate-data input (gateway.request) (object
    token (rules
        required true
        min-length 8
        max-length 256
        pattern identifier
        check:@invalid_token (eq? (config.system.token) ($))
    )
))

;; Load environment configuration file.
(when-not (path:exists "conf/(config.env).conf")
    (throw "Configuration file `(config.env).conf` does not exist"))

(set conf (config:parse (file:read "conf/(config.env).conf")))
(when-not (conf.Database) (set conf.Database (&)))

;; Load list of patches with prefix "db-".
(set patches (array:sort 
    (map (filter (dir:files "conf/database") (and (ends-with? ".sql" (i.name)) (starts-with? "db-" (i.name))))
        (& name (i.name) path (i.path) version (substr 3 (array:first (split "_" (i.name)))) ))
    (str:compare (a.version) (b.version))
))

(set db_time (datetime:parse (db:scalar `SELECT NOW()`)))
(set srv_time (datetime:now))

(&
    databaseTime (db_time)
    serverTime (srv_time)
    currentVersion (or (conf.Database.version) "N/A")
    latestVersion ((array:last (patches)).version)
    status (ne? (db_time) (srv_time) "ðŸš¨ Database and server timezones do not match" "Ok")
)
